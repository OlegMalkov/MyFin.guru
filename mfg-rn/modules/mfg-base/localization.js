/* @flow */
/* eslint-disable max-len */

import { RNLocalization } from './rn/RN'
import type { MyDay } from './const'
type Strings = { [key: $Keys<typeof ru>]: string }

const
  ru = {
    before: 'До',
    enterUserName: 'Введите имя пользователя',
    badUserName: 'Невалидное имя пользователя',
    decryptAccount: 'Расшифровать аккаунт',
    encryptAccount: 'Зашифровать аккаунт',
    accept: 'Принять',
    reject: 'Отклонить',
    invitation: 'Приглашение',
    invitationDescription: '{0} приглашает вас вступить в семью.',
    permissionDenied: 'Доступ запрещен',
    exceptionTitle: 'Непредвиденая ошибка',
    exceptionDescription: 'Произошла ошибка, отчет отправлен разработчикам.',
    migrationAllowedOnlyByAccountOwner: 'Попросите владельца основного аккаунта выполнить миграцию.',
    migrationDone: 'Миграция завершена',
    migrationCompletedByAccountOwner: 'Миграция завершена владельцем аккаунта. Приложения будет перезапущено.',
    debit: 'Дебетовый',
    credit: 'Кредитный',
    type: 'Тип',
    global: 'global',
    fail: 'Провал',
    allUsers: 'Все',
    me: 'Я',
    loading: 'Загрузка ...',
    noItems: 'нечего показать',
    noParent: '-',
    categoryTypeExpense: 'Расход',
    categoryTypeIncome: 'Доход',
    deleteCategoryWhereToTransfer: 'Необходимо активное поключение к интернет\nКуда перенести {0} транзакции из {1}?',
    deleteCategoryReadingTransactions: 'Проверяем транзакции...',
    deleteCategoryReadingArchiveTransactions: 'Проверяем архив транзакций...',
    deleteCategoryProcessing: 'Необходимо активное поключение к интернет \nУдаляем...',
    done: 'Готово',
    sort: 'Сортировать',
    deleteLabel: 'Удалить',
    edit: 'Редактировать',
    version: 'Версия {0}',
    cantMigrate: 'Миграция данных с {0} на {1} не удалась',
    logout: 'Выйти',
    create: 'Создать',
    dataNotFulfilled: 'Неполные данные',
    missingCategory: 'Категория не выбрана',
    missingStorage: 'Место хранения не выбрано',
    missingTargetStorage: 'Место назначения не выбрано',
    missingAmount: 'Введите количество',
    missingUser: 'Пользователь не выбран',
    missingTargetAmount: 'Введите количество назначения',
    missingCurrency: 'Выбирите валюту',
    missingTargetCurrency: 'Выбирите валюту назначения',
    missingDebt: 'Введите название долга',
    addCategory: 'Добавить категорию',
    addStorage: 'Добавить хранилище',
    repeatEveryMonth: 'Повторять каждый месяц',
    addPlannedExpenseTransaction: 'Добавить расход',
    addPlannedIncomeTransaction: 'Добавить доход',
    youCanEnterCommentAndTagsHere: 'теги и комментарий',
    enterAmount: 'введите сумму',
    noDate: 'без даты',
    date: '{0} числа',
    deleteForeverTitle: 'Безвозвратное удаление',
    deleteForeverMessage: 'Удалить {0} навсегда?',
    yes: 'да',
    no: 'нет',
    plannedTransactions: 'Запланированные транзакции',
    makeEditingDate: 'Редактируем {0}',
    effectiveSince: '{0}{1} от {2}',
    editThis: 'Редактировать только этот месяц',
    editAllFollowing: 'Редактировать этот и все последующие месяцы',
    deleteThis: 'Удалить в этом месяце',
    deleteAllFollowing: 'Удалить в этом и всех последующих месяцах',
    blocked: 'Заблокированно',
    cantSetRepeatForPlannedTransaction: 'Невозможно установить повторение, редактируется только транзакця в текущем месяце',
    cantUnsetRepeatForPlannedTransaction: 'Невозможно снять повторение, редактируется эта и все последующие транзакции',
    cantEditPlanOnParentCategories: 'План не может быть задан для родительской категории, используйте дочерние категории для его детализации',
    save: 'Сохранить',
    owner: 'Владелец',
    enterStorageName: 'Название места хранения',
    balance: 'Баланс',
    limit: 'Лимит',
    addCurrency: 'Добавть валюту',
    extended: 'Расширеный режим',
    notAMember: 'Нет аккаунта?',
    register: 'Зарегестрироваться',
    error: 'Ошибка',
    userNotFound: 'Пользователь не найден',
    userDisabled: 'Пользователь заблокирован',
    wrongPassword: 'Неправильный пароль',
    emailIsInvalid: 'Некорректный e-mail',
    emailIsInUse: 'e-mail уже используется',
    emailRegistrationTemporaryDisabled: 'Регистрация по email временно недоступна',
    weakPassword: 'Слабый пароль',
    login: 'Войти',
    dataMigrationInProgress: 'Мигрируем бд...',
    waitingForMigration: 'Ждем когда владелец аккаунта закончит миграцию данных.',
    restoreInProgress: 'Востановление бд...',
    success: 'Успешно',
    importFromDrebedengi: 'Импортируем ид Дребеденьги',
    restoreFromBackup: 'Восстанавливаем из бекапа',
    sendBackupNow: 'Отправить бекап сейчас',
    disconnectFromMainAccount: 'Отключить от основного аккаунта',
    enterYourName: 'Введите ваше имя',
    backingUpToOnlineDatabase: 'Бекапим в онлайн базу',
    applyingMigration: 'Применяем миграцию',
    savingToOnlineDatabase: 'Сохраняем в оналйн базу',
    isReliableDebt: 'Надежный долг',
    toLendMoney: 'Дать в долг',
    cantEditArchivedTransaction: 'Невозможно отредактировать архивированную транзакцию',
    registerInProgress: 'Идет регистрация...',
    registerSuccess: 'Успешная регистрация',
    registerFail: 'Регистрация не удалась',
    toLendDirection: 'Название займа',
    email: 'E-mail',
    password: 'Пароль',
    passwordsNotMatch: 'Пароли не совпадают',
    pickCurrencySearchFilter: 'Начните вводить для поиска',
    enterBackupEmail: 'Введите e-mail для бекапов',
    enterCategoryName: 'Введите название категории',
    fatalUiError: 'Что-то пошло не так. Пожалуйста перезапустите приложение.',
    appName: 'MyFin.guru',
    archiveTransactionsInProgress: 'Архивируем старые транзакции',
    archiveTransactionsDone: 'Архивация завершена',
    archiveTransactionsFail: 'Архивация транзакций не удалась',
    transactionsBefore: 'транзакций до',
    toArchive: 'к архивации',
    doArchive: 'Архивировать',
    restartApp: 'Перезапустить приложение',
    ok: 'Ok',
    sendBackupDone: 'Интернет должен быть включен на этом устройстве. Бекап будет вскоре доставлен на вашу почту.',
    emailMissing: 'Заполните поле e-mail',
    logoutInProgress: 'Выходим...',
    notAble: 'Операция невозможна',
    allFieldsMustBeFilled: 'Все поля должны быть заполнены',
    overrideForPlannedTransactionIsSameAsOriginalTransaction: 'Введены такие же данные как и в оригинальном плане',
    codeDataVersionIsLessThanAccountDataVersion: 'Версия аккаунта в коде меньше версии аккаунта на сервере. Обновите приложение',
    parent: 'Родитель',
    noHiddenStorages: 'Скрытых мест хранения нет',
    from: 'из',
  },
  en: Strings = {
    parent: 'parent',
    before: 'before',
    enterUserName: 'enterUserName',
    badUserName: 'badUserName',
    decryptAccount: 'decryptAccount',
    encryptAccount: 'encryptAccount',
    accept: 'accept',
    reject: 'reject',
    invitation: 'invitation',
    invitationDescription: 'invitationDescription',
    permissionDenied: 'permissionDenied',
    exceptionTitle: 'Exception happned',
    exceptionDescription: 'exceptionDescription',
    migrationAllowedOnlyByAccountOwner: 'migrationAllowedOnlyByAccountOwner',
    migrationDone: 'migrationDone',
    migrationCompletedByAccountOwner: 'migrationCompletedByAccountOwner',
    debit: 'debit',
    credit: 'credit',
    type: 'type',
    global: 'global',
    fail: 'fail',
    allUsers: 'all',
    me: 'me',
    loading: 'loading',
    noItems: 'noItems',
    noParent: 'noParent',
    categoryTypeExpense: 'categoryTypeExpense',
    categoryTypeIncome: 'categoryTypeIncome',
    deleteCategoryWhereToTransfer: 'deleteCategoryWhereToTransfer',
    deleteCategoryReadingTransactions: 'deleteCategoryReadingTransactions',
    deleteCategoryReadingArchiveTransactions: 'deleteCategoryReadingArchiveTransactions',
    deleteCategoryProcessing: 'deleteCategoryProcessing',
    done: 'done',
    sort: 'sort',
    deleteLabel: 'deleteLabel',
    edit: 'edit',
    version: 'Version {0}',
    cantMigrate: 'cantMigrate',
    logout: 'logout',
    create: 'create',
    dataNotFulfilled: 'dataNotFulfilled',
    missingCategory: 'missingCategory',
    missingStorage: 'missingStorage',
    missingTargetStorage: 'missingTargetStorage',
    missingAmount: 'missingAmount',
    missingUser: 'missingUser',
    missingTargetAmount: 'missingTargetAmount',
    missingCurrency: 'missingCurrency',
    missingTargetCurrency: 'missingTargetCurrency',
    missingDebt: 'missingDebt',
    addCategory: 'addCategory',
    addStorage: 'addStorage',
    repeatEveryMonth: 'repeatEveryMonth',
    addPlannedExpenseTransaction: 'addPlannedExpenseTransaction',
    addPlannedIncomeTransaction: 'addPlannedIncomeTransaction',
    youCanEnterCommentAndTagsHere: 'youCanEnterCommentAndTagsHere',
    enterAmount: 'enterAmount',
    noDate: 'noDate',
    date: 'date',
    deleteForeverTitle: 'deleteForeverTitle',
    deleteForeverMessage: 'deleteForeverMessage',
    yes: 'yes',
    no: 'no',
    plannedTransactions: 'plannedTransactions',
    makeEditingDate: 'makeEditingDate',
    effectiveSince: 'effectiveSince',
    editThis: 'editThis',
    editAllFollowing: 'editAllFollowing',
    deleteThis: 'deleteThis',
    deleteAllFollowing: 'deleteAllFollowing',
    blocked: 'blocked',
    cantSetRepeatForPlannedTransaction: 'cantSetRepeatForPlannedTransaction',
    cantUnsetRepeatForPlannedTransaction: 'cantUnsetRepeatForPlannedTransaction',
    cantEditPlanOnParentCategories: 'cantEditPlanOnParentCategories',
    save: 'save',
    owner: 'owner',
    enterStorageName: 'enterStorageName',
    balance: 'balance',
    limit: 'limit',
    addCurrency: 'addCurrency',
    extended: 'extended',
    notAMember: 'notAMember',
    register: 'register',
    error: 'error',
    userNotFound: 'userNotFound',
    userDisabled: 'userDisabled',
    wrongPassword: 'wrongPassword',
    emailIsInvalid: 'emailIsInvalid',
    emailIsInUse: 'emailIsInUse',
    emailRegistrationTemporaryDisabled: 'emailRegistrationTemporaryDisabled',
    weakPassword: 'weakPassword',
    login: 'login',
    dataMigrationInProgress: 'dataMigrationInProgress',
    waitingForMigration: 'waitingForMigration',
    restoreInProgress: 'restoreInProgress',
    success: 'success',
    importFromDrebedengi: 'importFromDrebedengi',
    restoreFromBackup: 'restoreFromBackup',
    sendBackupNow: 'sendBackupNow',
    disconnectFromMainAccount: 'disconnectFromMainAccount',
    enterYourName: 'enterYourName',
    backingUpToOnlineDatabase: 'backingUpToOnlineDatabase',
    applyingMigration: 'applyingMigration',
    savingToOnlineDatabase: 'savingToOnlineDatabase',
    isReliableDebt: 'isReliableDebt',
    toLendMoney: 'toLendMoney',
    cantEditArchivedTransaction: 'cantEditArchivedTransaction',
    registerInProgress: 'registerInProgress',
    registerSuccess: 'registerSuccess',
    registerFail: 'registerFail',
    toLendDirection: 'toLendDirection',
    email: 'email',
    password: 'password',
    passwordsNotMatch: 'passwordsNotMatch',
    pickCurrencySearchFilter: 'pickCurrencySearchFilter',
    enterBackupEmail: 'enterBackupEmail',
    enterCategoryName: 'enterCategoryName',
    fatalUiError: 'fatalUiError',
    appName: 'MyFin.guru',
    archiveTransactionsInProgress: 'archiveTransactionsInProgress',
    archiveTransactionsDone: 'archiveTransactionsDone',
    archiveTransactionsFail: 'archiveTransactionsFail',
    transactionsBefore: 'transactionsBefore',
    toArchive: 'toArchive',
    doArchive: 'doArchive',
    restartApp: 'restartApp',
    ok: 'ok',
    sendBackupDone: 'sendBackupDone',
    emailMissing: 'emailMissing',
    logoutInProgress: 'logoutInProgress',
    notAble: 'notAble',
    allFieldsMustBeFilled: 'allFieldsMustBeFilled',
    overrideForPlannedTransactionIsSameAsOriginalTransaction: 'overrideForPlannedTransactionIsSameAsOriginalTransaction',
    codeDataVersionIsLessThanAccountDataVersion: 'codeDataVersionIsLessThanAccountDataVersion',
    noHiddenStorages: 'There is no hidden storages',
    from: 'from',
  },
  localesConfig: any = {
    ru,/*
    en,
    'en-US': en,*/
  },
  rnl = RNLocalization,
  strings: {|
    ...{| [key: $Keys<typeof ru>]: string |},
    formatString: (s: string, p1?: string, p2?: string, p3?: string) => string
  |} = new rnl(localesConfig),
  dayToString = (day: MyDay) => day === 'no-day' ?
    strings.noDate :
    strings.formatString(strings.date, day.toString())

export { strings, dayToString }
